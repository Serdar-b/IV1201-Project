name: Node.js CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: newpassword
          POSTGRES_DB: myPostgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Specify the Node.js version you are using

      - name: Install Server Dependencies
        run: npm install
        working-directory: ./server

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h postgres -p 5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5  # Increase sleep time to ensure PostgreSQL has enough time to initialize
          done
        env:
          PGUSER: postgres
          PGPASSWORD: newpassword
          PGHOST: postgres
          PGDATABASE: myPostgres
          PGPORT: 5432

      - name: Set up Database Schema
        run: |
          psql -h postgres -U postgres -d myPostgres -a -c '
            CREATE TABLE IF NOT EXISTS public.person (
              id SERIAL PRIMARY KEY,
              name VARCHAR(50),
              surname VARCHAR(50),
              pnr VARCHAR(50),
              email VARCHAR(50),
              password VARCHAR(50),
              role_id INTEGER,
              username VARCHAR(50)
            );
            -- Include additional setup SQL commands as needed
          '
        env:
          PGPASSWORD: newpassword

      - name: Run Server Tests
        run: npm test
        working-directory: ./server
        env:
          PORT: 5001
          HOST: localhost
          PGUSER: postgres
          PGHOST: postgres  # Ensure this matches the service name
          PGPASSWORD: newpassword
          PGDATABASE: myPostgres
          PGPORT: 5432
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
